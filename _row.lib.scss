$pine-row--gap-sizes: $pine-gap--sizes !default;
$pine-row--item-gap-sizes: $pine-gap--sizes !default;

@mixin pine-row--styles($mods: 'default')
{
	@each $mod in $mods {
		@if $mod == 'default' {
			display: flex;
			align-items: stretch;
			justify-content: normal;
			flex-flow: row nowrap;
		}
		@if $mod == 'block' {
			display: flex;
		}
		@if $mod == 'inline' {
			display: inline-flex;
			align-items: baseline;
		}
		@if $mod == 'top' {
			align-items: flex-start;
		}
		@if $mod == 'normal' {
			align-items: normal;
		}
		@if $mod == 'stretch' {
			align-items: stretch;
		}
		@if $mod == 'middle' {
			align-items: center;
		}
		@if $mod == 'safe-middle' {
			align-items: safe center;
		}
		@if $mod == 'bottom' {
			align-items: flex-end;
		}
		@if $mod == 'left' {
			justify-content: flex-start;
		}
		@if $mod == 'center' {
			justify-content: center;
		}
		@if $mod == 'safe-center' {
			justify-content: safe center;
		}
		@if $mod == 'right' {
			justify-content: flex-end;
		}
		@if $mod == 'wrap' {
			flex-wrap: wrap;
		}
		@if $mod == 'nowrap' {
			flex-wrap: nowrap;
		}
	}
}

@mixin pine-row--rules($ns: 'pine')
{
	@include pine-selector-ns($ns, 'row') {
		$class-name: pine-name('row', $ns);
		
		@include pine-extend-ns('pine', 'row');

		&.#{$class-name}--block {
			@include pine-extend-ns('pine', 'row', 'block');
		}
		&.#{$class-name}--inline {
			@include pine-extend-ns('pine', 'row', 'inline');
		}
		&.#{$class-name}--top {
			@include pine-extend-ns('pine', 'row', 'top');
		}
		&.#{$class-name}--stretch {
			@include pine-extend-ns('pine', 'row', 'stretch');
		}
		&.#{$class-name}--middle {
			@include pine-extend-ns('pine', 'row', 'middle');
		}
		&.#{$class-name}--safe-middle {
			@include pine-extend-ns('pine', 'row', 'safe-middle');
		}
		&.#{$class-name}--bottom {
			@include pine-extend-ns('pine', 'row', 'bottom');
		}
		&.#{$class-name}--left {
			@include pine-extend-ns('pine', 'row', 'left');
		}
		&.#{$class-name}--center {
			@include pine-extend-ns('pine', 'row', 'center');
		}
		&.#{$class-name}--safe-center {
			@include pine-extend-ns('pine', 'row', 'safe-center');
		}
		&.#{$class-name}--right {
			@include pine-extend-ns('pine', 'row', 'right');
		}
		@if length($pine-row--gap-sizes) > 0 {
			@each $size in $pine-row--item-gap-sizes {
				$size-safe: pine-safe($size);
				&.#{$class-name}--item-margin-#{$size-safe} {
					> #{pine-selector-ns($ns, 'row-item')} {
						@include pine-extend-ns('pine', 'row-item', 'margin-#{$size-safe}', $optional: true);
						@each $size2 in $pine-row--item-gap-sizes {
							@if ($size2 != $size) {
								$size2: pine-safe($size2);
								&.#{$class-name}-item--margin-#{$size2} {
									@include pine-extend-ns('pine', 'row-item', 'margin-#{$size2}', $optional: true);
								}
							}
						}
					}
				}
				&.#{$class-name}--item-margin-#{$size-safe}a {
					> #{pine-selector-ns($ns, 'row-item')} {
						@include pine-extend-ns('pine', 'row-item', 'margin-#{$size-safe}a', $optional: true);
						@each $size2 in $pine-row--item-gap-sizes {
							@if ($size2 != $size) {
								$size2: pine-safe($size2);
								&.#{$class-name}-item--margin-#{$size2}a {
									@include pine-extend-ns('pine', 'row-item', 'margin-#{$size2}a', $optional: true);
								}
							}
						}
					}
				}
			}
		}
		&.#{$class-name}--margin,
		&.#{$class-name}--paragraph {
			@include pine-extend-ns('pine', 'row', 'margin', null, true);
		}
		@each $size in $pine-row--gap-sizes {
			$size: pine-safe($size);
			&.#{$class-name}--margin-#{$size} {
				@include pine-extend-ns('pine', 'row', 'margin-#{$size}', null, true);
			}
			&.#{$class-name}--margin-#{$size}a {
				@include pine-extend-ns('pine', 'row', 'margin-#{$size}a', null, true);
			}
		}
		&.#{$class-name}--wrap {
			@include pine-extend-ns('pine', 'row', 'wrap');
		}
		&.#{$class-name}--nowrap, 
		&.#{$class-name}--no-wrap {
			@include pine-extend-ns('pine', 'row', 'nowrap');
		}
		@include pine-edge--margin-column-mods($ns, 'row');
	}
	@include pine-selector-ns($ns, 'row-item') {
		$class-name: pine-name('row-item', $ns);
		
		@include pine-extend-ns('pine', 'row-item');
		
		@if length($pine-row--gap-sizes) > 0 {
			@each $size in $pine-row--item-gap-sizes {
				$size: pine-safe($size);
				&.#{$class-name}--margin-#{$size} {
					@include pine-extend-ns('pine', 'row-item', 'margin-#{$size}', $optional: true);
				}
				&.#{$class-name}--margin-#{$size}a {
					@include pine-extend-ns('pine', 'row-item', 'margin-#{$size}a', $optional: true);
				}
			}
		}
		&.#{$class-name}--fill {
			@include pine-extend-ns('pine', 'row-item', 'fill');
		}
		&.#{$class-name}--no-shrink {
			@include pine-extend-ns('pine', 'row-item', 'no-shrink');
		}
		&.#{$class-name}--basis-zero-percent {
			@include pine-extend-ns('pine', 'row-item', 'basis-zero-percent');
		}
		&.#{$class-name}--basis-initial {
			@include pine-extend-ns('pine', 'row-item', 'basis-initial');
		}
		&.#{$class-name}--basis-auto {
			@include pine-extend-ns('pine', 'row-item', 'basis-auto');
		}
		&.#{$class-name}--top {
			@include pine-extend-ns('pine', 'row-item', 'top');
		}
		&.#{$class-name}--middle {
			@include pine-extend-ns('pine', 'row-item', 'middle');
		}
		&.#{$class-name}--safe-middle {
			@include pine-extend-ns('pine', 'row-item', 'safe-middle');
		}
		&.#{$class-name}--stretch {
			@include pine-extend-ns('pine', 'row-item', 'stretch');
		}
		&.#{$class-name}--bottom {
			@include pine-extend-ns('pine', 'row-item', 'bottom');
		}
		&.#{$class-name}--clip {
			@include pine-extend-ns('pine', 'row-item', 'clip');
		}
		&.#{$class-name}--right {
			@include pine-extend-ns('pine', 'row-item', 'right');
		}
		&.#{$class-name}--left {
			@include pine-extend-ns('pine', 'row-item', 'left');
		}
	}
}
