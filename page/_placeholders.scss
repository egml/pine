//
//	██████   █████   ██████  ███████
//	██   ██ ██   ██ ██       ██
//	██████  ███████ ██   ███ █████
//	██      ██   ██ ██    ██ ██
//	██      ██   ██  ██████  ███████
//	
//	#page
//	
//	Разметка для page:
//	
//	<page-parent>
//		<page-container>
//			<page-container-helper>
//				<page>
//					<page-header>
//						<page-header-content/>
//					</page-header>
//					<page-main>
//						<page-main-row>
//							<page-sidebar/>
//							<page-content>
//								<page-content-main/>
//								<page-content-side/>
//							</page-content>
//							<page-sidebar/>
//						</page-main-row>
//					</page-main>
//					<page-footer>
//						<page-footer-content/>
//					</page-footer>
//				</page>
//			</page-container-helper>
//		</page-container>
//	</page-parent>
//	
@use '../core';
@use 'config' as *;

@mixin placeholders
{
	// 
	//	Применяется для элементов, у которых ширина не меняет размер, она
	// 	фиксированная, например "page-row-content":
	// 	```
	// 		@include core.placeholder-ns('pine', 'page-width', 'fixed') {
	//			max-width: plum-em(500);
	//			min-width: plum-em(500);
	//		}
	// 
	@include core.placeholder-ns('pine', 'page-width', 'fixed') {
		max-width: core.em($width);
		min-width: core.em($width);
	}

	// 
	// 	Применяется для внешней обертки, которая может менять ширину
	// 	здесь важно, чтобы ширины была НЕ МЕНЬШЕ заданной ширины страницы, 
	// 	то есть должен быть min-width. Пример использования:
	// 	```
	//		@include core.placeholder-ns('pine', 'page-width', 'outer') {
	//			min-width: plum-em(500 + 50 * 2);
	//		}
	// 
	@include core.placeholder-ns('pine', 'page-width', 'outer') {
		min-width: core.em($width + $gutter * 2);
	}
}
