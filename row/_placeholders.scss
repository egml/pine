//
//	██████   ██████  ██     ██
//	██   ██ ██    ██ ██     ██
//	██████  ██    ██ ██  █  ██
//	██   ██ ██    ██ ██ ███ ██
//	██   ██  ██████   ███ ███
//	
//	#row
//
@use '../core';
@use 'config';
@use 'styles';

@mixin placeholders
{
	@include core.placeholder-ns('pine', 'row') {
		@include styles.styles();
	}
	@include core.placeholder-ns('pine', 'row', 'block') {
		@include styles.styles('block');
	}
	@include core.placeholder-ns('pine', 'row', 'inline') {
		@include styles.styles('inline');
	}
	@include core.placeholder-ns('pine', 'row', 'top') {
		@include styles.styles('top');
	}
	@include core.placeholder-ns('pine', 'row', 'normal') {
		@include styles.styles('normal');
	}
	@include core.placeholder-ns('pine', 'row', 'stretch') {
		@include styles.styles('stretch');
	}
	@include core.placeholder-ns('pine', 'row', 'middle') {
		@include styles.styles('middle');
	}
	@include core.placeholder-ns('pine', 'row', 'safe-middle') {
		@include styles.styles('safe-middle');
	}
	@include core.placeholder-ns('pine', 'row', 'bottom') {
		@include styles.styles('bottom');
	}
	@include core.placeholder-ns('pine', 'row', 'left') {
		@include styles.styles('left');
	}
	@include core.placeholder-ns('pine', 'row', 'center') {
		@include styles.styles('center');
	}
	@include core.placeholder-ns('pine', 'row', 'safe-center') {
		@include styles.styles('safe-center');
	}
	@include core.placeholder-ns('pine', 'row', 'right') {
		@include styles.styles('right');
	}
	@include core.placeholder-extend-ns('pine', 'row', 'margin', 'pine', 'paragraph', 'margin', true);
	@include core.placeholder-extend-ns('pine', 'row', 'paragraph', 'pine', 'row', 'margin', true);
	@each $size in config.$gap-sizes {
		@include core.placeholder-extend-ns('pine', 'row', 'margin-#{$size}', 'pine', 'gap', 'margin-column-#{$size}', true);
		@include core.placeholder-extend-ns('pine', 'row', 'margin-#{$size}a', 'pine', 'gap', 'margin-column-#{$size}a', true);
	}
	@include core.placeholder-extend-ns('pine', 'row', 'edge', 'pine', 'edge', 'margin-column');
	@include core.placeholder-ns('pine', 'row', 'wrap') {
		@include styles.styles('wrap');
	}
	@include core.placeholder-ns('pine', 'row', 'nowrap') {
		@include styles.styles('nowrap');
	}
	@include core.placeholder-extend-ns('pine', 'row', 'no-wrap', 'pine', 'row', 'nowrap');

	//
	//	██ ████████ ███████ ███    ███
	//	██    ██    ██      ████  ████
	//	██    ██    █████   ██ ████ ██
	//	██    ██    ██      ██  ██  ██
	//	██    ██    ███████ ██      ██
	//	
	//	#item
	//
	
	@include core.placeholder-ns('pine', 'row-item') {
		flex: 0 1 auto;
		// #NOTE: По вопросу дефолтного flex-basis смотри эпический батл test/flexbox-overflow-scroll. TL;DR: Для iOS Safari иногда нужно "0%", и вообще, это "initial value", как удалось вычислить через getComputedStyle. Надо это помнить.
	}
	@each $size in config.$item-gap-sizes {
		@include core.placeholder-extend-ns('pine', 'row-item', 'margin-#{$size}', 'pine', 'gap', 'margin-right-#{$size}', true);
		@include core.placeholder-extend-ns('pine', 'row-item', 'margin-#{$size}', 'pine', 'edge', 'margin-row');
		@include core.placeholder-extend-ns('pine', 'row-item', 'margin-#{$size}a', 'pine', 'gap', 'margin-right-#{$size}a', true);
		@include core.placeholder-extend-ns('pine', 'row-item', 'margin-#{$size}a', 'pine', 'edge', 'margin-row');
	}
	@include core.placeholder-ns('pine', 'row-item', 'fill') {
		flex-grow: 1;
	}
	@include core.placeholder-ns('pine', 'row-item', 'no-shrink') {
		flex-shrink: 0;
	}
	@include core.placeholder-ns('pine', 'row-item', 'basis-zero-percent') {
		flex-basis: 0%;
	}
	@include core.placeholder-extend-ns('pine', 'row-item', 'basis-initial', 'pine', 'row-item', 'basis-zero-percent');
	@include core.placeholder-ns('pine', 'row-item', 'basis-auto') {
		flex-basis: auto;
	}
	@include core.placeholder-ns('pine', 'row-item', 'top') {
		align-self: flex-start;
	}
	@include core.placeholder-ns('pine', 'row-item', 'middle') {
		align-self: center;
	}
	@include core.placeholder-ns('pine', 'row-item', 'safe-middle') {
		align-self: safe center;
	}
	@include core.placeholder-ns('pine', 'row-item', 'stretch') {
		align-self: stretch;
	}
	@include core.placeholder-ns('pine', 'row-item', 'bottom') {
		align-self: flex-end;
	}
	@include core.placeholder-ns('pine', 'row-item', 'clip') {
		overflow: hidden;
	}
	
}
